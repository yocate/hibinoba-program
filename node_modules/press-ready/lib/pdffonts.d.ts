import shell from 'shelljs';
export declare type BoundaryParamKey = 'bottomLeftX' | 'bottomLeftY' | 'topRightX' | 'topRightY';
export interface Result {
    Title: string;
    Pages: number;
    'PDF version': number;
    MediaBox: {
        [index in BoundaryParamKey]: number;
    };
    CropBox: {
        [index in BoundaryParamKey]: number;
    };
    BleedBox: {
        [index in BoundaryParamKey]: number;
    };
    TrimBox: {
        [index in BoundaryParamKey]: number;
    };
    ArtBox: {
        [index in BoundaryParamKey]: number;
    };
    'Page size': {
        width: number;
        height: number;
        raw?: string;
    };
}
export interface Font {
    name: string;
    type: string;
    emb: 'yes' | 'no';
    sub: 'yes' | 'no';
}
export interface PDFFontsResponse {
    rawResponse: unknown;
    fonts: Font[];
}
export declare class ParserError extends Error {
}
export declare function isPdfFontsAvailable(): shell.ShellString;
export declare function pdfFonts(filePath: string): Promise<PDFFontsResponse>;
export declare function pdfInfo(filePath: string): Promise<Result>;
