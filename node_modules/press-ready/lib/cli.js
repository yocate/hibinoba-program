#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const yargs_1 = __importDefault(require("yargs"));
const build_1 = require("./commands/build");
const lint_1 = require("./commands/lint");
const util_1 = require("./util");
const chalk_1 = __importDefault(require("chalk"));
yargs_1.default
    .scriptName('press-ready')
    .command({
    command: 'build',
    describe: 'build PDF',
    builder: (yargs) => yargs
        .option('input', {
        demand: true,
        alias: 'i',
        description: 'Input file path (relative)',
    })
        .option('output', {
        default: './output.pdf',
        alias: 'o',
        description: 'Output file path (relative)',
    })
        .option('gray-scale', {
        boolean: true,
        default: false,
        description: 'Use gray scale color space instead of CMYK',
    })
        .option('enforce-outline', {
        boolean: true,
        description: 'Convert embedded fonts to outlined fonts',
    })
        .option('boundary-boxes', {
        boolean: true,
        default: false,
        description: 'Add boundary boxes on every page',
    }),
    handler: build_1.build,
})
    .command({
    command: 'lint <input>',
    describe: 'lint PDF',
    builder: (yargs) => yargs.positional('input', {
        required: true,
        description: 'Input file path (relative)',
    }),
    handler: lint_1.lint,
})
    .demandCommand()
    .help()
    // @ts-ignore
    .fail((msg, err, yargs) => {
    if (err) {
        util_1.log(chalk_1.default.red(err));
    }
    else {
        util_1.rawLog(yargs.help(), '\n');
        util_1.rawLog(msg);
    }
    process.exit();
}).argv;
