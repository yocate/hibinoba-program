import { lookup as mime } from 'mime-types';
import upath from 'upath';
export function detectInputFormat(entry) {
    const lowerCasedExt = upath.extname(entry).toLowerCase();
    if (lowerCasedExt === '.md' || lowerCasedExt === '.markdown') {
        return { format: 'markdown', entry };
    }
    else if (lowerCasedExt === '.json' || lowerCasedExt === '.jsonld') {
        return { format: 'pub-manifest', entry };
    }
    else if (lowerCasedExt === '.epub') {
        return { format: 'epub', entry };
    }
    else if (lowerCasedExt === '.opf') {
        return { format: 'epub-opf', entry };
    }
    else if (['.html', '.htm', '.xhtml', '.xht'].includes(lowerCasedExt)) {
        return { format: 'webbook', entry };
    }
    throw new Error(`Cannot find an input format for ${entry}`);
}
export const manuscriptMediaTypes = [
    'text/markdown',
    'text/html',
    'application/xhtml+xml',
];
export function detectManuscriptMediaType(entry) {
    const mediaType = mime(entry);
    if (manuscriptMediaTypes.includes(mediaType)) {
        return mediaType;
    }
    throw new Error(`Invalid manuscript type ${mediaType} detected: ${entry}`);
}
//# sourceMappingURL=input-types.js.map