import { readMetadata, } from '@vivliostyle/vfm';
import fs from 'node:fs';
import vfile from 'vfile';
function safeReadMetadata(content) {
    // The input assumes VFM format, but errors during metadata extraction
    // should be suppressed to allow processing of non-VFM files as well.
    try {
        return readMetadata(content);
    }
    catch {
        return {};
    }
}
export async function processMarkdown(documentProcessorFactory, filepath, options = {}) {
    const markdownString = fs.readFileSync(filepath, 'utf8');
    const processor = documentProcessorFactory(options, safeReadMetadata(markdownString));
    const processed = (await processor.process(vfile({ path: filepath, contents: markdownString })));
    return processed;
}
export function readMarkdownMetadata(filepath) {
    return safeReadMetadata(fs.readFileSync(filepath, 'utf8'));
}
//# sourceMappingURL=markdown.js.map