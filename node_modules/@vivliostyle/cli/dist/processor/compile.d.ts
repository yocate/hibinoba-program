import { MergedConfig, WebPublicationManifestConfig } from '../input/config.js';
export declare function cleanupWorkspace({ entryContextDir, workspaceDir, themesDir, }: MergedConfig): Promise<void>;
export declare function prepareThemeDirectory({ themesDir, themeIndexes, }: MergedConfig): Promise<void>;
export declare function compile({ entryContextDir, workspaceDir, manifestPath, needToGenerateManifest, title, author, entries, language, readingProgression, cover, documentProcessorFactory, vfmOptions, }: MergedConfig & WebPublicationManifestConfig): Promise<void>;
export declare function getDefaultIgnorePatterns({ themesDir, cwd, }: Pick<MergedConfig, 'themesDir'> & {
    cwd: string;
}): string[];
export declare function getIgnoreAssetPatterns({ outputs, entries, cwd, }: Pick<MergedConfig, 'outputs' | 'entries'> & {
    cwd: string;
}): string[];
export declare function globAssetFiles({ copyAsset: { fileExtensions, includes, excludes }, outputs, themesDir, entries, cwd, ignore, }: Pick<MergedConfig, 'copyAsset' | 'outputs' | 'themesDir' | 'entries'> & {
    cwd: string;
    ignore?: string[];
}): Promise<Set<string>>;
export declare function copyAssets({ entryContextDir, workspaceDir, copyAsset, outputs, themesDir, entries, }: MergedConfig): Promise<void>;
export declare function checkOverwriteViolation({ entryContextDir, workspaceDir }: MergedConfig, target: string, fileInformation: string): void;
//# sourceMappingURL=compile.d.ts.map