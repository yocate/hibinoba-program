import type { Meta, TOCItem } from '../global-viewer.js';
import { MergedConfig } from '../input/config.js';
import type { PdfOutput } from './output-types.js';
export type SaveOption = Pick<PdfOutput, 'preflight' | 'preflightOption'> & Pick<MergedConfig, 'image'>;
export interface PageSizeData {
    mediaWidth: number;
    mediaHeight: number;
    bleedOffset: number;
    bleedSize: number;
}
export declare function pressReadyWithContainer({ input, output, preflightOption, image, }: {
    input: string;
    output: string;
    preflightOption: string[];
    image: string;
}): Promise<void>;
export declare class PostProcess {
    private document;
    static load(pdf: Buffer): Promise<PostProcess>;
    private constructor();
    save(output: string, { preflight, preflightOption, image }: SaveOption): Promise<void>;
    metadata(tree: Meta, { pageProgression, browserVersion, viewerCoreVersion, disableCreatorOption, }?: {
        pageProgression?: 'ltr' | 'rtl';
        browserVersion?: string;
        viewerCoreVersion?: string;
        disableCreatorOption?: boolean;
    }): Promise<void>;
    toc(items: TOCItem[]): Promise<void>;
    setPageBoxes(pageSizeData: PageSizeData[]): Promise<void>;
}
//# sourceMappingURL=pdf-postprocess.d.ts.map